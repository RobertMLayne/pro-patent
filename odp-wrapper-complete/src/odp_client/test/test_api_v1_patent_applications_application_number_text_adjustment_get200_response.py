# coding: utf-8

"""
    Open Data Portal (ODP) API

    The Open Data Portal (ODP) API allows you to extract USPTO data at no cost - with several ways to do it. To learn about the ODP API Rate Limits, please visit to the <a href=\"https://data.uspto.gov/apis/api-rate-limits\" target=\"_blank\">API Rate Limits page</a>. <br><br> <b>Before proceeding</b>, you must have an ODP API key in order to access these Swagger UI resources. Once you have obtained an API key, you can pass the API key into a REST API call in the x-api-key header of the request. For more details and steps to generate an API key visit to the <a href=\"https://data.uspto.gov/apis/getting-started\" target=\"_blank\">Getting Started page</a>.<br><br>For example, the request to access patent data for an application might look like as below.<br><br><code>curl -X \"GET\" \"https://api.uspto.gov/api/v1/patent/applications/14412875\" -H \"X-API-KEY:YOUR_API_KEY\"</code><br><br></br><code>curl -X \"POST\" \"https://api.uspto.gov/api/v1/patent/applications/search\" -H \"X-API-KEY:YOUR_API_KEY\" -d \"{\\\\\"q\\\\\":\\\\\"applicationMetaData.applicationTypeLabelName:Utility\\\\\"}\"</br></code>

    The version of the OpenAPI document: 1.0.0
    Contact: data@uspto.gov
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_v1_patent_applications_application_number_text_adjustment_get200_response import ApiV1PatentApplicationsApplicationNumberTextAdjustmentGet200Response

class TestApiV1PatentApplicationsApplicationNumberTextAdjustmentGet200Response(unittest.TestCase):
    """ApiV1PatentApplicationsApplicationNumberTextAdjustmentGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiV1PatentApplicationsApplicationNumberTextAdjustmentGet200Response:
        """Test ApiV1PatentApplicationsApplicationNumberTextAdjustmentGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiV1PatentApplicationsApplicationNumberTextAdjustmentGet200Response`
        """
        model = ApiV1PatentApplicationsApplicationNumberTextAdjustmentGet200Response()
        if include_optional:
            return ApiV1PatentApplicationsApplicationNumberTextAdjustmentGet200Response(
                count = 1,
                patent_file_wrapper_data_bag = [
                    openapi_client.models._api_v1_patent_applications__application_number_text__adjustment_get_200_response_patent_file_wrapper_data_bag_inner._api_v1_patent_applications__applicationNumberText__adjustment_get_200_response_patentFileWrapperDataBag_inner(
                        application_number_text = '14104993', 
                        patent_term_adjustment_data = openapi_client.models.patent_term_adjustment.PatentTermAdjustment(
                            a_delay_quantity = 0, 
                            adjustment_total_quantity = 0, 
                            applicant_day_delay_quantity = 28, 
                            b_delay_quantity = 0, 
                            c_delay_quantity = 0, 
                            non_overlapping_day_quantity = 0, 
                            overlapping_day_quantity = 0, 
                            patent_term_adjustment_history_data_bag = [
                                openapi_client.models.patent_term_adjustment_patent_term_adjustment_history_data_bag_inner.PatentTermAdjustment_patentTermAdjustmentHistoryDataBag_inner(
                                    event_date = '2016-06-07', 
                                    applicant_day_delay_quantity = 4, 
                                    event_description_text = 'Patent Issue Date Used in PTA Calculation', 
                                    event_sequence_number = 0.5, 
                                    ip_office_day_delay_quantity = 0, 
                                    originating_event_sequence_number = 0, 
                                    pta_pte_code = 'PTA', )
                                ], ), )
                    ]
            )
        else:
            return ApiV1PatentApplicationsApplicationNumberTextAdjustmentGet200Response(
        )
        """

    def testApiV1PatentApplicationsApplicationNumberTextAdjustmentGet200Response(self):
        """Test ApiV1PatentApplicationsApplicationNumberTextAdjustmentGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
