# coding: utf-8

"""
    Open Data Portal (ODP) API

    The Open Data Portal (ODP) API allows you to extract USPTO data at no cost - with several ways to do it. To learn about the ODP API Rate Limits, please visit to the <a href=\"https://data.uspto.gov/apis/api-rate-limits\" target=\"_blank\">API Rate Limits page</a>. <br><br> <b>Before proceeding</b>, you must have an ODP API key in order to access these Swagger UI resources. Once you have obtained an API key, you can pass the API key into a REST API call in the x-api-key header of the request. For more details and steps to generate an API key visit to the <a href=\"https://data.uspto.gov/apis/getting-started\" target=\"_blank\">Getting Started page</a>.<br><br>For example, the request to access patent data for an application might look like as below.<br><br><code>curl -X \"GET\" \"https://api.uspto.gov/api/v1/patent/applications/14412875\" -H \"X-API-KEY:YOUR_API_KEY\"</code><br><br></br><code>curl -X \"POST\" \"https://api.uspto.gov/api/v1/patent/applications/search\" -H \"X-API-KEY:YOUR_API_KEY\" -d \"{\\\\\"q\\\\\":\\\\\"applicationMetaData.applicationTypeLabelName:Utility\\\\\"}\"</br></code>

    The version of the OpenAPI document: 1.0.0
    Contact: data@uspto.gov
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.bdss_response_product_bag import BdssResponseProductBag

class TestBdssResponseProductBag(unittest.TestCase):
    """BdssResponseProductBag unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BdssResponseProductBag:
        """Test BdssResponseProductBag
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BdssResponseProductBag`
        """
        model = BdssResponseProductBag()
        if include_optional:
            return BdssResponseProductBag(
                count = 25,
                bulk_data_product_bag = [
                    [
                        openapi_client.models.bulk_data_product_bag_inner.BulkDataProductBag_inner(
                            product_identifier = 'PTFWPRE', 
                            product_description_text = 'Bibliographic and assignments static patent data compiled into file sets. The Weekly Datasets (10-year increments) can be downloaded in bulk.', 
                            product_title_text = 'Patent File Wrapper (Bulk Datasets) - Weekly', 
                            product_frequency_text = 'WEEKLY', 
                            days_of_week_text = 'SUNDAY', 
                            product_label_array_text = [
                                '["RESEARCH","PATENT"]'
                                ], 
                            product_data_set_array_text = [
                                '["Research"]'
                                ], 
                            product_data_set_category_array_text = [
                                '["Patent file wrapper"]'
                                ], 
                            product_from_date = 'Sun Dec 31 19:00:00 EST 2000', 
                            product_to_date = 'Tue Dec 30 19:00:00 EST 2025', 
                            product_total_file_size = 32511973080, 
                            product_file_total_quantity = 3, 
                            last_modified_date_time = '2023-12-07T15:52:00.000Z', 
                            mime_type_identifier_array_text = [
                                '["JSON"]'
                                ], 
                            product_file_bag = openapi_client.models.product_file_bag.ProductFileBag(
                                count = 3, 
                                file_data_bag = [
                                    openapi_client.models.product_file_bag_file_data_bag_inner.ProductFileBag_fileDataBag_inner(
                                        file_name = '2001-2010-patent-filewrapper-full-json.zip', 
                                        file_size = 1698377311, 
                                        file_data_from_date = 'Sun Dec 31 19:00:00 EST 2000', 
                                        file_data_to_date = 'Thu Dec 30 19:00:00 EST 2010', 
                                        file_type_text = 'Data', 
                                        file_download_uri = 'https://api.uspto.gov/api/v1/datasets/products/files/PTFWPRE/2001-2010-patent-filewrapper-full-json.zip', 
                                        file_release_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        file_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        file_last_modified_date_time = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                                    ], ), )
                        ]
                    ]
            )
        else:
            return BdssResponseProductBag(
        )
        """

    def testBdssResponseProductBag(self):
        """Test BdssResponseProductBag"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
