# coding: utf-8

"""
    Open Data Portal (ODP) API

    The Open Data Portal (ODP) API allows you to extract USPTO data at no cost - with several ways to do it. To learn about the ODP API Rate Limits, please visit to the <a href=\"https://data.uspto.gov/apis/api-rate-limits\" target=\"_blank\">API Rate Limits page</a>. <br><br> <b>Before proceeding</b>, you must have an ODP API key in order to access these Swagger UI resources. Once you have obtained an API key, you can pass the API key into a REST API call in the x-api-key header of the request. For more details and steps to generate an API key visit to the <a href=\"https://data.uspto.gov/apis/getting-started\" target=\"_blank\">Getting Started page</a>.<br><br>For example, the request to access patent data for an application might look like as below.<br><br><code>curl -X \"GET\" \"https://api.uspto.gov/api/v1/patent/applications/14412875\" -H \"X-API-KEY:YOUR_API_KEY\"</code><br><br></br><code>curl -X \"POST\" \"https://api.uspto.gov/api/v1/patent/applications/search\" -H \"X-API-KEY:YOUR_API_KEY\" -d \"{\\\\\"q\\\\\":\\\\\"applicationMetaData.applicationTypeLabelName:Utility\\\\\"}\"</br></code>

    The version of the OpenAPI document: 1.0.0
    Contact: data@uspto.gov
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.record_attorney_power_of_attorney_bag_inner import RecordAttorneyPowerOfAttorneyBagInner

class TestRecordAttorneyPowerOfAttorneyBagInner(unittest.TestCase):
    """RecordAttorneyPowerOfAttorneyBagInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RecordAttorneyPowerOfAttorneyBagInner:
        """Test RecordAttorneyPowerOfAttorneyBagInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RecordAttorneyPowerOfAttorneyBagInner`
        """
        model = RecordAttorneyPowerOfAttorneyBagInner()
        if include_optional:
            return RecordAttorneyPowerOfAttorneyBagInner(
                first_name = 'DANIEL',
                middle_name = 'D',
                last_name = 'O'BRIEN',
                name_prefix = 'Dr',
                name_suffix = 'Jr.',
                preferred_name = '',
                country_code = 'US',
                registration_number = '65545',
                active_indicator = 'ACTIVE',
                registered_practitioner_category = 'ATTNY',
                attorney_address_bag = [
                    openapi_client.models.record_attorney_power_of_attorney_bag_inner_attorney_address_bag_inner.RecordAttorney_powerOfAttorneyBag_inner_attorneyAddressBag_inner(
                        name_line_one_text = 'SEED IP LAW  GROUP LLP', 
                        name_line_two_text = 'STOCKTON', 
                        address_line_one_text = '701 FIFTH AVENUE', 
                        address_line_two_text = 'SUITE 5400', 
                        geographic_region_name = 'WASHINGTON', 
                        geographic_region_code = 'WA', 
                        postal_code = '98104', 
                        city_name = 'SEATTLE', 
                        country_code = 'US', 
                        country_name = 'UNITED STATES', )
                    ],
                telecommunication_address_bag = [
                    openapi_client.models.record_attorney_power_of_attorney_bag_inner_telecommunication_address_bag_inner.RecordAttorney_powerOfAttorneyBag_inner_telecommunicationAddressBag_inner(
                        telecommunication_number = '206-622-4900', 
                        extension_number = '243', 
                        telecom_type_code = 'TEL', )
                    ]
            )
        else:
            return RecordAttorneyPowerOfAttorneyBagInner(
        )
        """

    def testRecordAttorneyPowerOfAttorneyBagInner(self):
        """Test RecordAttorneyPowerOfAttorneyBagInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
