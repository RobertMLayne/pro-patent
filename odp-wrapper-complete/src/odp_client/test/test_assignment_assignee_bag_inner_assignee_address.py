# coding: utf-8

"""
    Open Data Portal (ODP) API

    The Open Data Portal (ODP) API allows you to extract USPTO data at no cost - with several ways to do it. To learn about the ODP API Rate Limits, please visit to the <a href=\"https://data.uspto.gov/apis/api-rate-limits\" target=\"_blank\">API Rate Limits page</a>. <br><br> <b>Before proceeding</b>, you must have an ODP API key in order to access these Swagger UI resources. Once you have obtained an API key, you can pass the API key into a REST API call in the x-api-key header of the request. For more details and steps to generate an API key visit to the <a href=\"https://data.uspto.gov/apis/getting-started\" target=\"_blank\">Getting Started page</a>.<br><br>For example, the request to access patent data for an application might look like as below.<br><br><code>curl -X \"GET\" \"https://api.uspto.gov/api/v1/patent/applications/14412875\" -H \"X-API-KEY:YOUR_API_KEY\"</code><br><br></br><code>curl -X \"POST\" \"https://api.uspto.gov/api/v1/patent/applications/search\" -H \"X-API-KEY:YOUR_API_KEY\" -d \"{\\\\\"q\\\\\":\\\\\"applicationMetaData.applicationTypeLabelName:Utility\\\\\"}\"</br></code>

    The version of the OpenAPI document: 1.0.0
    Contact: data@uspto.gov
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.assignment_assignee_bag_inner_assignee_address import AssignmentAssigneeBagInnerAssigneeAddress

class TestAssignmentAssigneeBagInnerAssigneeAddress(unittest.TestCase):
    """AssignmentAssigneeBagInnerAssigneeAddress unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AssignmentAssigneeBagInnerAssigneeAddress:
        """Test AssignmentAssigneeBagInnerAssigneeAddress
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AssignmentAssigneeBagInnerAssigneeAddress`
        """
        model = AssignmentAssigneeBagInnerAssigneeAddress()
        if include_optional:
            return AssignmentAssigneeBagInnerAssigneeAddress(
                address_line_one_text = 'CHEMIN DU CHAMP-DES-FILLES 39',
                address_line_two_text = '1228 PLAN-LES-OUATES',
                city_name = 'GENEVA',
                geographic_region_name = 'CHX',
                geographic_region_code = '',
                country_name = 'Switzerland',
                postal_code = '20123'
            )
        else:
            return AssignmentAssigneeBagInnerAssigneeAddress(
        )
        """

    def testAssignmentAssigneeBagInnerAssigneeAddress(self):
        """Test AssignmentAssigneeBagInnerAssigneeAddress"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
