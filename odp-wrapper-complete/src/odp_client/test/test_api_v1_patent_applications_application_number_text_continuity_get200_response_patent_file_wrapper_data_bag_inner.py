# coding: utf-8

"""
    Open Data Portal (ODP) API

    The Open Data Portal (ODP) API allows you to extract USPTO data at no cost - with several ways to do it. To learn about the ODP API Rate Limits, please visit to the <a href=\"https://data.uspto.gov/apis/api-rate-limits\" target=\"_blank\">API Rate Limits page</a>. <br><br> <b>Before proceeding</b>, you must have an ODP API key in order to access these Swagger UI resources. Once you have obtained an API key, you can pass the API key into a REST API call in the x-api-key header of the request. For more details and steps to generate an API key visit to the <a href=\"https://data.uspto.gov/apis/getting-started\" target=\"_blank\">Getting Started page</a>.<br><br>For example, the request to access patent data for an application might look like as below.<br><br><code>curl -X \"GET\" \"https://api.uspto.gov/api/v1/patent/applications/14412875\" -H \"X-API-KEY:YOUR_API_KEY\"</code><br><br></br><code>curl -X \"POST\" \"https://api.uspto.gov/api/v1/patent/applications/search\" -H \"X-API-KEY:YOUR_API_KEY\" -d \"{\\\\\"q\\\\\":\\\\\"applicationMetaData.applicationTypeLabelName:Utility\\\\\"}\"</br></code>

    The version of the OpenAPI document: 1.0.0
    Contact: data@uspto.gov
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_v1_patent_applications_application_number_text_continuity_get200_response_patent_file_wrapper_data_bag_inner import ApiV1PatentApplicationsApplicationNumberTextContinuityGet200ResponsePatentFileWrapperDataBagInner

class TestApiV1PatentApplicationsApplicationNumberTextContinuityGet200ResponsePatentFileWrapperDataBagInner(unittest.TestCase):
    """ApiV1PatentApplicationsApplicationNumberTextContinuityGet200ResponsePatentFileWrapperDataBagInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiV1PatentApplicationsApplicationNumberTextContinuityGet200ResponsePatentFileWrapperDataBagInner:
        """Test ApiV1PatentApplicationsApplicationNumberTextContinuityGet200ResponsePatentFileWrapperDataBagInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiV1PatentApplicationsApplicationNumberTextContinuityGet200ResponsePatentFileWrapperDataBagInner`
        """
        model = ApiV1PatentApplicationsApplicationNumberTextContinuityGet200ResponsePatentFileWrapperDataBagInner()
        if include_optional:
            return ApiV1PatentApplicationsApplicationNumberTextContinuityGet200ResponsePatentFileWrapperDataBagInner(
                application_number_text = '14104993',
                parent_continuity_bag = [
                    openapi_client.models.parent_continuity_data.ParentContinuityData(
                        first_inventor_to_file_indicator = True, 
                        parent_application_status_code = 159, 
                        parent_patent_number = '8968299', 
                        parent_application_status_description_text = 'Patent Expired Due to NonPayment of Maintenance Fees Under 37 CFR 1.362', 
                        parent_application_filing_date = '2012-05-23', 
                        parent_application_number_text = '123123133', 
                        child_application_number_text = '10121016', 
                        claim_parentage_type_code = 'CODE', 
                        claim_parentage_type_code_description_text = 'Claims priority from a provisional application', )
                    ],
                child_continuity_bag = [
                    openapi_client.models.child_continuity_data.ChildContinuityData(
                        child_application_status_code = 150, 
                        parent_application_number_text = '14104993', 
                        child_application_number_text = '14853719', 
                        child_application_status_description_text = 'Patented Case', 
                        child_application_filing_date = '2015-09-14', 
                        first_inventor_to_file_indicator = False, 
                        child_patent_number = '9704967', 
                        claim_parentage_type_code = 'DIV', 
                        claim_parentage_type_code_description_text = 'Claims priority from a provisional application', )
                    ],
                request_identifier = '07c5c24d-bf8e-458c-9427-a038500d6e98'
            )
        else:
            return ApiV1PatentApplicationsApplicationNumberTextContinuityGet200ResponsePatentFileWrapperDataBagInner(
        )
        """

    def testApiV1PatentApplicationsApplicationNumberTextContinuityGet200ResponsePatentFileWrapperDataBagInner(self):
        """Test ApiV1PatentApplicationsApplicationNumberTextContinuityGet200ResponsePatentFileWrapperDataBagInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
